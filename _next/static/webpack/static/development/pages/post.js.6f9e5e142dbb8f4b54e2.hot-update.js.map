{"version":3,"file":"static/webpack/static\\development\\pages\\post.js.6f9e5e142dbb8f4b54e2.hot-update.js","sources":["webpack:///./components/BackTop.tsx"],"sourcesContent":["import React, { Component } from 'react';\r\nimport { Icon, Button } from 'antd';\r\nimport throttle from 'lodash/throttle';\r\n\r\nexport interface IBackTopProps {\r\n    target?: string;\r\n    threshold?: number;\r\n    scrollStep?: number;\r\n    delayMs?: number;\r\n}\r\n\r\nclass BackTop extends Component<IBackTopProps> {\r\n    private content: Element;\r\n    private timeoutId: NodeJS.Timeout;\r\n    private intervalId: NodeJS.Timeout;\r\n\r\n    static defaultProps: IBackTopProps = {\r\n        threshold: 64,\r\n        target: '.ant-layout-content',\r\n        scrollStep: 100,\r\n        delayMs: 16,\r\n    }\r\n\r\n    componentDidMount() {\r\n        const { target } = this.props;\r\n        this.content = document.querySelector(target);\r\n        if (this.content) {\r\n            this.attachEvent(this.content);\r\n        }\r\n    }\r\n\r\n    attachEvent = (content) => {\r\n        content.addEventListener('scroll', this.onScroll);\r\n    }\r\n\r\n    onScroll = throttle((e: any) => {\r\n        const { threshold } = this.props;\r\n        if (e.target.scrollTop >= threshold) {\r\n            const content = document.querySelector('.blog-backtop');\r\n            content.classList.add('visible');\r\n            if (this.timeoutId) {\r\n                clearTimeout(this.timeoutId);\r\n            }\r\n            this.timeoutId = setTimeout(() => {\r\n                const content = document.querySelector('.blog-backtop');\r\n                if (content) {\r\n                    content.classList.remove('visible');\r\n                }\r\n            }, 1500);\r\n        } else {\r\n            const content = document.querySelector('.blog-backtop');\r\n            content.classList.remove('visible');\r\n        }\r\n    }, 200)\r\n\r\n    scrollStep = () => {\r\n        if (this.content.scrollTop === 0) {\r\n            clearInterval(this.intervalId);\r\n        }\r\n        this.content.scrollTo(0, this.content.scrollTop - this.props.scrollStep);\r\n    }\r\n\r\n    scrollToTop = () => {\r\n        if (this.content && this.props.target) {\r\n            this.intervalId = setInterval(() => {\r\n                this.scrollStep();\r\n            }, this.props.delayMs);\r\n        }\r\n    }\r\n      \r\n    render() {\r\n        return (\r\n            <Button className=\"blog-backtop\" type=\"primary\" shape=\"circle\" onClick={this.scrollToTop}>\r\n                <Icon type=\"to-top\" style={{ fontSize: '1.25rem' }} />\r\n            </Button>\r\n        );\r\n    }\r\n}\r\n\r\nexport default BackTop;"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAEA;AACA;AAQA;;;;;;;;;;;;;;;;;;AAoBA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;AA9CA;AAAA;AAEA;AACA;AAAA;AACA;AACA;AACA;;;AAyCA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAGA;;;;AAjEA;AACA;AADA;AAMA;AACA;AACA;AACA;AAJA;AACA;AA8DA;;;;A","sourceRoot":""}